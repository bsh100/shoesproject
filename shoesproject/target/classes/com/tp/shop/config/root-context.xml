<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<bean id="aspect" class="com.tp.shop.aspect.MyAspect">
	</bean>
	
	<context:component-scan
		base-package="com.tp.shop"></context:component-scan>
	<context:property-placeholder
		location="classpath:com/tp/shop/config/mysql_value.properties" />
	
	 	<aop:config>
		<aop:pointcut
			expression="execution(public * com.tp.shop.controller.MypageController.*(..)) || execution(public * com.tp.shop.controller.CartController.*(..)) || execution(public * com.tp.shop.controller.OrderController.*(..))" id="pt_needLogin" />
		<aop:aspect ref="aspect">
			<!-- 핵심기능기준설정 : 접근제어자 : public , 반환타입 : int 핵심기능의 클래스명.메서드명 : Core.core() 
				id : corePt 횡단 기능을 갖는 ( aspect를 수행할 기능을 가진 ) 클래스 설정 : aspect ( bean id 참조 
				) -->
			<aop:after method="after" pointcut-ref="pt_needLogin" />
			<aop:before method="before" pointcut-ref="pt_needLogin" />
			<aop:after-returning method="afterReturnning"
				pointcut-ref="pt_needLogin" returning="returnURL"/>
			<aop:after-throwing method="afterThorowing"
				pointcut-ref="pt_needLogin" throwing="th" />
			<!-- 해당 클래스 내에서 정의된 메서드를 어떤 핵심 기능(pointcut)을 기준으로 언제(advice) 실행할 지 설정 -->

		</aop:aspect>

	</aop:config>
	 	
	<!-- dataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.dc}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:com/tp/shop/config/mybatisConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/tp/shop/mapper/xml/UserMapper.xml</value>
				<value>classpath:com/tp/shop/mapper/xml/adminMapper.xml</value>
				<value>classpath:com/tp/shop/mapper/xml/QnaMapper.xml</value>
				<value>classpath:com/tp/shop/mapper/xml/cartMapper.xml</value>
				<value>classpath:com/tp/shop/mapper/xml/NoticeMapper.xml</value>
				<value>classpath:com/tp/shop/mapper/xml/orderMapper.xml</value>				
				<value>classpath:com/tp/shop/mapper/xml/MainMapper.xml</value>				
				<value>classpath:com/tp/shop/mapper/xml/customerMapper.xml</value>
			</list>
		</property>
	</bean>
	
	

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 마이바티스 매퍼 등록 -->
	<mybatis-spring:scan
		base-package="com.tp.shop.mapper.java" />

	<!-- 파라미터 처리를 위해 -->
	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
<!-- 	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice> -->
	
	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<!-- 이미지 출력을 위해 맵핑작업  -->
	<mvc:default-servlet-handler/>
	<mvc:resources location="/WEB-INF/view/images/" mapping="/images/**"/>
	<mvc:resources location="/WEB-INF/view/css/" mapping="/css/**"/>
</beans>
